name: Create Beta Release

on:
  workflow_dispatch:
    inputs:
      bump:
        description: "Version bump type (major, minor, patch)"
        required: true
        default: "minor"
        type: choice
        options:
          - major
          - minor
          - patch
      release_notes:
        description: "Release notes (markdown supported)"
        required: true
        default: ""
        type: string

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get latest beta release version
        id: get_latest
        run: |
          latest_tag=$(gh release list --limit 100 --json tagName --jq '.[] | select(.tagName | test("^v[0-9]+\\.[0-9]+\\.[0-9]+-beta$")) | .tagName' | sort -V | tail -n 1)

          if [[ -z "$latest_tag" ]]; then
            major=1
            minor=0
            patch=0
          else
            version=$(echo "$latest_tag" | sed -E 's/^v([0-9]+)\.([0-9]+)\.([0-9]+)-beta$/\1 \2 \3/')
            read major minor patch <<< "$version"
          fi

          case "${{ github.event.inputs.bump }}" in
            major) major=$((major + 1)); minor=0; patch=0 ;;
            minor) minor=$((minor + 1)); patch=0 ;;
            patch) patch=$((patch + 1)) ;;
          esac

          next_version="${major}.${minor}.${patch}"
          tag="v${next_version}-beta"
          echo "next_version=$next_version" >> $GITHUB_OUTPUT
          echo "tag=$tag" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        run: |
          notes="## This Release Includes:\n"
          # Add a dash to each line of the input
          while IFS= read -r line; do
            notes="$notes- $line\n"
          done <<< "${{ github.event.inputs.release_notes }}"

          # Escape for GitHub output
          escaped=$(printf "%s" "$notes" | sed -E 's/%/%25/g; s/\r/%0D/g; s/\n/%0A/g')

          gh release create ${{ steps.get_latest.outputs.tag }} \
            --title "Version ${{ steps.get_latest.outputs.next_version }}-beta" \
            --notes "$escaped"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
